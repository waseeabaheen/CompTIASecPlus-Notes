# CompTIA Security+ (SY0-701) â€“ Cheat Sheet and Quick Reference

This cheat sheet provides a quick reference to important ports, protocols, commands, cryptography, network security terms, and other key concepts for the **CompTIA Security+ (SY0-701)** exam.

---

## Common Ports and Protocols

| **Port** | **Service/Protocol**        | **Description**                                 |
|----------|-----------------------------|-------------------------------------------------|
| **20/21**| FTP                         | File Transfer Protocol (unencrypted)            |
| **22**   | SSH                         | Secure Shell (encrypted remote access)          |
| **23**   | Telnet                      | Unencrypted remote access                      |
| **25**   | SMTP                        | Simple Mail Transfer Protocol (email sending)   |
| **53**   | DNS                         | Domain Name System (domain resolution)          |
| **67/68**| DHCP                        | Dynamic Host Configuration Protocol (IP address assignment) |
| **80**   | HTTP                        | HyperText Transfer Protocol (unencrypted web)   |
| **110**  | POP3                        | Post Office Protocol 3 (email retrieval)        |
| **143**  | IMAP                        | Internet Message Access Protocol (email retrieval) |
| **443**  | HTTPS                       | HyperText Transfer Protocol Secure (encrypted web) |
| **3389** | RDP                         | Remote Desktop Protocol (Windows)               |
| **445**  | SMB                         | Server Message Block (Windows file sharing)     |

---

## Common Cryptographic Algorithms

### Symmetric Encryption
- **AES (Advanced Encryption Standard):** Commonly used for encrypting bulk data.
- **ChaCha20:** A fast and secure stream cipher used in places like TLS.

### Asymmetric Encryption
- **RSA:** A widely used public-key cryptosystem.
- **ECC (Elliptic Curve Cryptography):** Stronger and more efficient than RSA for smaller key sizes.

### Hashing Algorithms
- **SHA-256:** A secure hashing algorithm in the SHA-2 family; used for integrity checks and digital signatures.
- **HMAC (Hash-based Message Authentication Code):** Used for message integrity and authentication using a hash function and a secret key.

### Key Exchange
- **Diffie-Hellman (DH):** A method for securely exchanging cryptographic keys over a public channel.
- **ECDHE (Elliptic Curve Diffie-Hellman Ephemeral):** Diffie-Hellman using elliptic curve cryptography, offering stronger security with smaller key sizes.

---

## Key Security Concepts

- **CIA Triad:**  
  - **Confidentiality:** Ensuring that only authorized individuals or systems can access data.
  - **Integrity:** Ensuring that data is accurate and not tampered with.
  - **Availability:** Ensuring that systems and data are available when needed.

- **AAA Model:**  
  - **Authentication:** Verifying the identity of users, systems, or devices.
  - **Authorization:** Determining what resources a user or system can access.
  - **Accounting:** Tracking and logging the actions of users and systems.

- **Zero Trust:** Never trust, always verify. All network traffic, whether internal or external, should be considered untrusted until verified.

- **Defense-in-Depth:** A layered security strategy where multiple independent security controls are applied to protect systems and data.

- **Non-repudiation:** Ensures that actions cannot be denied by the actor. This is typically achieved with logging and digital signatures.

- **Least Privilege:** Granting users and systems the minimum level of access necessary to perform their job or function.

---

## Encryption and Authentication Protocols

- **SSL/TLS:** Secure Sockets Layer and its successor, Transport Layer Security, are protocols that provide encryption for communications over the internet (e.g., HTTPS).
- **IPsec:** Internet Protocol Security, a protocol suite for securing IP communications by authenticating and encrypting data packets.
- **S/MIME:** Secure/Multipurpose Internet Mail Extensions, used for encrypting email communications.

---

## Security Tools and Technologies

- **IDS/IPS (Intrusion Detection/Prevention Systems):** Systems that monitor network traffic for malicious activity and can take action to block or alert administrators.
- **SIEM (Security Information and Event Management):** A system for collecting, analyzing, and managing security event data from various sources.
- **NAC (Network Access Control):** Controls the access level of devices and users on a network based on policy.
- **WAF (Web Application Firewall):** A firewall designed to protect web applications from attacks by filtering and monitoring HTTP traffic.

---

## Commands and Networking

### Linux Commands
- **`last`**: Show the last logins of users.
- **`journalctl -xe`**: View system logs with a focus on errors.
- **`ss -tulpn`**: Display open ports and associated processes.
- **`ps aux --sort=-%mem`**: View running processes sorted by memory usage.
- **`iptables`**: Command-line utility for setting up, maintaining, and inspecting the IP packet filter rules in the Linux kernel.

### Windows Commands
- **`Get-EventLog`**: Retrieve Windows event logs for auditing purposes.
- **`netstat -ano`**: Display active network connections and listening ports, along with associated process IDs.
- **`Get-ScheduledTask`**: View scheduled tasks in Windows.
- **`net user`**: Display or modify user account details.
- **`Get-WinEvent`**: Get event logs with more detailed information than `Get-EventLog`.

---

## Security Operations

### Incident Response Phases
1. **Preparation:** Establishing tools, policies, and teams for responding to incidents.
2. **Identification:** Detecting that an incident has occurred.
3. **Containment:** Preventing the incident from spreading to other systems.
4. **Eradication:** Removing the threat from the environment (e.g., malware removal).
5. **Recovery:** Restoring systems and services to normal operation.
6. **Lessons Learned:** Documenting the incident and improving processes for future incidents.

---

## Mini Labs & Practice Scenarios

1. **Password Cracking Demo**: Use `hashcat` or `John the Ripper` to crack a simple password hash using a wordlist.
2. **TLS Check**: Run `nmap --script ssl-enum-ciphers -p 443 site.com` to enumerate supported SSL/TLS ciphers on a web server.
3. **Network Segmentation**: Set up a simple VLAN or subnet and test traffic isolation using `ping` and `nmap`.
4. **DLP Setup**: Configure a basic data loss prevention policy on a file share or endpoint to block the transfer of sensitive files.

---

